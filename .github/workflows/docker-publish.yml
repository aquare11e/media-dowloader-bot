name: Docker Build and Push

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Install protoc
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler

      - name: Generate protobuf files
        run: make protoc

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push bot service
        uses: docker/build-push-action@v5
        with:
          context: ./bot
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/bot:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push coordinator service
        uses: docker/build-push-action@v5
        with:
          context: ./coordinator-service
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/coordinator:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push plex service
        uses: docker/build-push-action@v5
        with:
          context: ./plex-service
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/plex:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push transmission service
        uses: docker/build-push-action@v5
        with:
          context: ./transmission-service
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/transmission:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max 