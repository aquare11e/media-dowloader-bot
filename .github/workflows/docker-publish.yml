name: Docker Build and Push

on:
  push:
    tags:
      - 'v*'  # Trigger on tags starting with 'v'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Install protoc and Go plugins
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler
          go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.31.0
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.3.0
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

      - name: Generate protobuf files
        run: make protoc

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push bot service
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./bot/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/bot:${{ github.ref_name }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/bot:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push coordinator service
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./coordinator-service/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/coordinator:${{ github.ref_name }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/coordinator:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push plex service
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./plex-service/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/plex:${{ github.ref_name }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/plex:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push transmission service
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./transmission-service/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/transmission:${{ github.ref_name }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/transmission:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  update-docker-compose:
    needs: build-and-push
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Create versioned docker-compose file
        run: |
          sed "s/:latest/:${{ github.ref_name }}/g" docker-compose.yml > docker-compose.current.yml
          echo "Updated docker-compose.current.yml"

      - name: Commit and push versioned docker-compose
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add docker-compose.current.yml
          git commit -m "Update docker-compose.current.yml for version ${{ github.ref_name }}"
          git push